#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 1.0.4 on Sat Apr 16 10:48:19 2022
#

import wx

# begin wxGlade: dependencies
import wx.grid

from TaskList import TaskList
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class AppWindowBase(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: AppWindowBase.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.SetSize((400, 300))
        self.SetTitle("WhaddaDoo")

        self.panel_1 = wx.Panel(self, wx.ID_ANY)

        sizer_1 = wx.BoxSizer(wx.VERTICAL)

        self.window_1 = wx.SplitterWindow(self.panel_1, wx.ID_ANY)
        self.window_1.SetMinimumPaneSize(20)
        sizer_1.Add(self.window_1, 1, wx.EXPAND, 0)

        self.window_1_pane_1 = wx.Panel(self.window_1, wx.ID_ANY)

        sizer_2 = wx.BoxSizer(wx.VERTICAL)

        self.grid_tasks = TaskList(self.window_1_pane_1, wx.ID_ANY, size=(1, 1))
        self.grid_tasks.CreateGrid(10, 2)
        self.grid_tasks.EnableDragColSize(0)
        self.grid_tasks.EnableDragRowSize(0)
        # self.grid_tasks.SetSelectionMode(wx.grid.Grid.SelectRows)
        self.grid_tasks.SetColLabelValue(0, "Text")
        sizer_2.Add(self.grid_tasks, 1, wx.EXPAND, 0)

        self.window_1_pane_2 = wx.Panel(self.window_1, wx.ID_ANY)

        sizer_3 = wx.BoxSizer(wx.VERTICAL)

        sizer_3.Add((0, 0), 0, 0, 0)

        self.window_1_pane_2.SetSizer(sizer_3)

        self.window_1_pane_1.SetSizer(sizer_2)

        self.window_1.SplitVertically(self.window_1_pane_1, self.window_1_pane_2)

        self.panel_1.SetSizer(sizer_1)

        self.Layout()
        self.Centre()

        self.Bind(wx.grid.EVT_GRID_CMD_CELL_CHANGED, self.on_grid_tasks_cell_changed, self.grid_tasks)
        self.Bind(wx.EVT_SHOW, self.on_frame_show, self)
        # end wxGlade

    def on_grid_tasks_cell_changed(self, event):  # wxGlade: AppWindowBase.<event_handler>
        print("Event handler 'on_grid_tasks_cell_changed' not implemented!")
        event.Skip()

    def on_frame_show(self, event):  # wxGlade: AppWindowBase.<event_handler>
        print("Event handler 'on_frame_show' not implemented!")
        event.Skip()

# end of class AppWindowBase

class MyApp(wx.App):
    def OnInit(self):
        self.frame = AppWindowBase(None, wx.ID_ANY, "")
        self.SetTopWindow(self.frame)
        self.frame.Show()
        return True

# end of class MyApp

if __name__ == "__main__":
    app = MyApp(0)
    app.MainLoop()
