#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 1.0.4 on Mon Apr 18 16:29:12 2022
#

import wx

# begin wxGlade: dependencies
import wx.grid
# end wxGlade

# begin wxGlade: extracode
import wx.richtext
from ui.task_list import TaskList
# end wxGlade


class AppWindowBase(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: AppWindowBase.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.SetSize((650, 550))
        self.SetTitle("WhaddaDoo")

        self.panel_1 = wx.Panel(self, wx.ID_ANY)

        sizer_1 = wx.BoxSizer(wx.VERTICAL)

        self.window_1 = wx.SplitterWindow(self.panel_1, wx.ID_ANY, style=0)
        self.window_1.SetMinimumPaneSize(100)
        self.window_1.SetSashGravity(0.5)
        sizer_1.Add(self.window_1, 1, wx.ALL | wx.EXPAND, 8)

        self.window_1_pane_1 = wx.Panel(self.window_1, wx.ID_ANY)

        sizer_2 = wx.BoxSizer(wx.VERTICAL)

        self.grid_tasks = TaskList(self.window_1_pane_1, wx.ID_ANY, size=(1, 1))
        self.grid_tasks.CreateGrid(10, 2)
        self.grid_tasks.EnableDragColSize(0)
        self.grid_tasks.EnableDragRowSize(0)
        self.grid_tasks.SetGridLineColour(wx.Colour(224, 224, 224))
        self.grid_tasks.SetColLabelValue(0, "Status")
        self.grid_tasks.SetColLabelValue(1, "Text")
        sizer_2.Add(self.grid_tasks, 1, wx.EXPAND | wx.RIGHT, 4)

        self.window_1_pane_2 = wx.Panel(self.window_1, wx.ID_ANY)

        sizer_4 = wx.BoxSizer(wx.HORIZONTAL)

        self.panel_2 = wx.ScrolledWindow(self.window_1_pane_2, wx.ID_ANY, style=wx.TAB_TRAVERSAL)
        self.panel_2.SetScrollRate(10, 10)
        sizer_4.Add(self.panel_2, 1, wx.EXPAND | wx.LEFT, 4)

        sizer_3 = wx.BoxSizer(wx.VERTICAL)

        self.edit_desc = wx.richtext.RichTextCtrl(self.panel_2, wx.ID_ANY)
        self.edit_desc.SetMinSize((-1, 100))
        sizer_3.Add(self.edit_desc, 0, wx.EXPAND, 0)

        sizer_3.Add((20, 16), 0, 0, 0)

        self.grid_comments = wx.grid.Grid(self.panel_2, wx.ID_ANY, size=(1, 1))
        self.grid_comments.CreateGrid(10, 0)
        self.grid_comments.EnableDragColSize(0)
        self.grid_comments.EnableDragRowSize(0)
        self.grid_comments.EnableDragGridSize(0)
        self.grid_comments.SetGridLineColour(wx.Colour(224, 224, 224))
        sizer_3.Add(self.grid_comments, 1, wx.EXPAND, 0)

        sizer_5 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_3.Add(sizer_5, 0, wx.EXPAND | wx.TOP, 8)

        sizer_5.Add((20, 20), 1, 0, 0)

        self.btn_comment = wx.Button(self.panel_2, wx.ID_ANY, "Co&mment")
        sizer_5.Add(self.btn_comment, 0, 0, 0)

        self.panel_2.SetSizer(sizer_3)

        self.window_1_pane_2.SetSizer(sizer_4)

        self.window_1_pane_1.SetSizer(sizer_2)

        self.window_1.SplitVertically(self.window_1_pane_1, self.window_1_pane_2)

        self.panel_1.SetSizer(sizer_1)

        self.Layout()
        self.Centre()

        self.Bind(wx.grid.EVT_GRID_CMD_CELL_CHANGED, self.on_grid_tasks_cell_changed, self.grid_tasks)
        self.Bind(wx.EVT_SHOW, self.on_frame_show, self)
        # end wxGlade

    def on_grid_tasks_cell_changed(self, event):  # wxGlade: AppWindowBase.<event_handler>
        print("Event handler 'on_grid_tasks_cell_changed' not implemented!")
        event.Skip()

    def on_frame_show(self, event):  # wxGlade: AppWindowBase.<event_handler>
        print("Event handler 'on_frame_show' not implemented!")
        event.Skip()

# end of class AppWindowBase

class MyApp(wx.App):
    def OnInit(self):
        self.frame = AppWindowBase(None, wx.ID_ANY, "")
        self.SetTopWindow(self.frame)
        self.frame.Show()
        return True

# end of class MyApp

if __name__ == "__main__":
    app = MyApp(0)
    app.MainLoop()
